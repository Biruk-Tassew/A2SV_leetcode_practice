class Solution:
    def reverse(self, nums, start, end):
        while start < end:
            nums[start], nums[end] = nums[end], nums[start]
            start += 1
            end -= 1
            
    def rotate(self, nums: List[int], k: int) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        # solution one with time complexity of O(n) and space complexity of O(1)
        for i in range(k):
            temp = nums.pop()
            nums.insert(0, temp) 
        # solution two with time complexity of O(n) and space complexity of O(1)
        k %= len(nums)
        self.reverse(nums, 0, len(nums)-1)
        self.reverse(nums, 0, k-1)
        self.reverse(nums, k, len(nums)-1)
        
